<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="gui" default="false"/>
    <arg name="record" default="false"/>
    <arg name="playback" default="false"/>
    <arg name="useMissionPlanner" default="false"/>
    <arg name="doorDetector" default="true"/>
    <arg name="reporter" default="true"/>
    <arg name="exploration" default="false"/>


    <param name="robot_description" command="$(find xacro)/xacro.py '$(find kinect)/urdf/p3dx_real.xacro'"/>

    <node name="rosaria" pkg="rosaria" type="RosAria">
        <remap from="/rosaria/cmd_vel" to="p3dx/cmd_vel"/>
        <remap from="/rosaria/pose" to="p3dx/odom"/>
        <param name="port" value="/dev/ttyUSB0"/>
        <param name="odom_frame" value="odom_rosaria"/>
    </node>

    <group if="$(eval arg ('playback') == false)">
        <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch"/>
    </group>
    <group if="$(arg playback)">
        <param name="use_sim_time" value="true"/>
        <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher100" args="0 0 0 0 0 0 kinect2_link kinect2_rgb_optical_frame 50"/>
        <node pkg="rosbag" type="play" args="/home/student/tum_fixed.bag --clock" name="tum_playback">

            <remap from="/camera/rgb/camera_info" to="/kinect2/sd/camera_info"/>
            <remap from="/camera/depth/image" to="/kinect2/sd/image_depth_rect"/>
            <remap from="/camera/rgb/image_color" to="/kinect2/sd/image_color_rect"/>
        </node>
    </group>

    <!-- <include file="$(find tinkerforge_sensors)/launch/tinkerforge_sensors.launch" /> -->

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0"/>
    </node>


    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 50"/>
    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher2" args="-0.2 0 0.036 0 0 0 base_link center_wheel 50"/>
    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher3" args="-0.178 0 0.052 0 0 0 base_link swivel 50"/>
    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher4" args="0.12 0 0.59 1.57 3.14 1.57 base_link kinect2_link 50"/>
    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher5" args="0 0 0 -1.57 -1.57 3.14 kinect2_rgb_optical_frame kinect2_rgb_scan_frame 50"/>
    <node pkg="tf" type="static_transform_publisher" name="static_transform_publisher6" args="0.12 0 0.59 -1.57 0 3.14 base_link imu_frame 50"/>

    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
        <param name="scan_height" value="60"/>
        <param name="output_frame_id" value="/kinect2_rgb_scan_frame"/>
        <param name="range_min" value="0.45"/>
        <param name="range_max" value="5"/>
        <remap from="image" to="/kinect2/sd/image_depth_rect"/>
        <remap from="scan" to="/scan"/>
    </node>

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
        <param name="frame_id" type="string" value="base_link"/>
        <param name="subscribe_depth" type="bool" value="true"/>
        <param name="subscribe_scan" type="bool" value="true"/>
        <remap from="odom" to="/odometry/filtered"/>
        <remap from="rgb/image" to="/kinect2/sd/image_color_rect"/>
        <remap from="depth/image" to="/kinect2/sd/image_depth"/>
        <remap from="rgb/camera_info" to="/kinect2/sd/camera_info"/>
        <remap from="/grid_map" to="/map"/>
        <remap from="/scan" to="/filtered_scan"/>
        <param name="queue_size" type="int" value="10"/>

        <param name="RGBD/ProximityBySpace" type="string" value="false"/>
        <param name="RGBD/AngularUpdate" type="string" value="0.1"/>
        <param name="RGBD/LinearUpdate" type="string" value="0.1"/>
        <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
        <param name="Reg/Force3DoF" type="string" value="true"/>
        <param name="Vis/MinInliers" type="string" value="12"/>
        <param name="Vis/MaxDepth" type="string" value="4.5"/>
        <param name="Grid/RangeMax" type="string" value="4.5"/>
        <param name="GridGlobal/Eroded" type="string" value="false"/>
        <param name="Grid/3D" type="string" value="false"/>
        <param name="Mem/STMSize" type="string" value="30"/>
        <param name="Mem/ReduceGraph" type="string" value="true"/>
        <param name="RGBD/ProximityMaxGraphDepth" type="string" value="40"/>
        <param name="RGBD/OptimizeMaxError" type="string" value="0"/>
        <param name="RGBD/OptimizeStrategy" type="string" value="2"/>
        <param name="Optimizer/Robust" type="string" value="true"/>
    </node>


    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" clear_params="true" output="screen">
        <rosparam command="load" file="$(find kinect)/param/ekf_params.yaml"/>
        <!--  Placeholder for output topic remapping
            <remap from="odometry/filtered" to=""/>
            <remap from="accel/filtered" to=""/>
            -->
    </node>

    <include file="$(find kinect)/launch/include/move_base.launch.xml">
    </include>

    <node pkg="pcl_filter" type="pcl_filter" name="my_pcl_filter">
        <remap from="output_scan" to="filtered_scan"/>
        <remap from="input_scan" to="/scan"/>
    </node>
rosrun explore_lite explore costmap_topic:=/move_base/global_costmap/costmap costmap_update_topic:=/move_base/global_costmap/costmap_updates visualize:=true planner_frequency:=0.33 progress_timeout:=20.0 potential_scale:=3.0 orientation_scale:=0.0 gain_scale:=1.0 transform_tolerance:=0.3 min_frontier_size:=0.75
    <node name="tfsensors" pkg="tinkerforge_sensors" type="tinkerforge_sensors_node" output="screen">
        <rosparam param="UID_to_Topic">
            6wViuNa : 'imu_v2'
        </rosparam>
    </node>


    <group if="$(arg doorDetector)">
        <node pkg="door_detector" type="door_detector" name="door_detector"/>
        <node pkg="door_position" type="door_position" name="door_position"/>
    </group>

    <group if="$(arg reporter)">
        <node pkg="reporter" type="reporter" name="reporter"/>
        <node pkg="webserver" type="webserver" name="webserver"/>
    </group>

    <group if="$(arg gui)">
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find kinect)/config/rviz2.rviz"/>
    </group>

    <group if="$(arg record)">
        <node pkg="rosbag" type="record" name="record1" args="-a -O record.bag -x /kinect2/(.*)|/rosaria/sonar(.*)"/>
    </group>

    <group if="$(arg useMissionPlanner)">
        <node pkg="mission_planner" type="send_nav_goals.py" name="mission_planner"/>
    </group>


    <group if="$(arg exploration)">

        <node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
            <param name="robot_base_frame" value="base_link"/>
            <param name="costmap_topic" value="/move_base/global_costmap/costmap"/>
            <param name="costmap_update_topic" value="/move_base/global_costmap/costmap_updates"/>
            <param name="visualize" value="true"/>
            <param name="planner_frequency" value="0.33"/>
            <param name="progress_timeout" value="20.0"/>
            <param name="potential_scale" value="3.0"/>
            <param name="orientation_scale" value="0.0"/>
            <param name="gain_scale" value="1.0"/>
            <param name="transform_tolerance" value="0.3"/>
            <param name="min_frontier_size" value="0.75"/>
        </node>


    </group>


</launch>
